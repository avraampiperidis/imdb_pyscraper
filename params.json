{
  "name": "imdb_pyscraper",
  "tagline": "python program that scraps imdb.com and stores data into mysql db",
  "body": "# imdb_pyscraper\r\n-------------\r\n\r\npython program that scraps imdb.com and stores data into mysql db\r\n\r\nIntro-Info\r\n-----\r\n\r\nAll the movies/series in imdb.com are accessible from url <br>\r\nhttp://www.imdb.com/title/tt[movie id]/<br>\r\nwitch starts from 0000001 and ends 9999999(!some of them are invalid,not taken yet)<br>\r\nalso a relationship between higher id and year of movie/series exists!\r\n<br>\r\n<br>\r\nAnd all the actors are accessible from url:\r\nhttp://www.imdb.com/name/nm[actor id]/\r\n<br>\r\n<br>\r\nby incrementing movie id we get all movies,<br>\r\nand from movies we get the actors, from every movie casts. <br>\r\n<br>\r\nTv shows and series are also as movies.<br>\r\nshow it goes like this series->seasons->episodes.\r\n<br>\r\n<br>\r\nplot,actors bio,photo urls,genres,episodes titles are included in the scraping proccess.\r\n<br>\r\n<br>\r\nMysql Db Setup\r\n-----\r\nEdit the conf.py for user mysql credentials.(be sure to have database creation privileges)<br>\r\nRun init_create_db_schema.py OR init_create_db_schema_with_indexes_references.py.<br>\r\nIt will create the database and all its tables needed.<br>\r\nThe difference between this two is tha the init_create_db_schema_with_indexes_references.py,<br>\r\nwill create also indexes,references,keys,constraints,<br>\r\nwhile the other create_db_schema.py will create only the databas+tables.<br>\r\nNote for(init_create_db_schema_with_indexes_references.py) a lot amount of data the <br>\r\ndatabase will become slow for updates/new inserts ,and will geting slower as the program runs,<br>\r\nand the data are geting even more.<br>\r\n<br>\r\nthe mysql workbench schema -> https://github.com/avraampiperidis/imdb_pyscraper/blob/master/workbench_schema.mwb?raw=true\r\n\r\nRun\r\n-----\r\njust run imdbmain.py\r\n\r\n<br>\r\nConfiguration\r\n-----\r\nconf.py contains some user options.<br>\r\nmysql connection credentials.<br>\r\nimdb scrap options.\r\n\r\n*The script is a proof of concept. It’s mostly working, but you shouldn’t use it. IMDb doesn’t allow this method of data fetching.\r\n\r\nThe technique used is called “[web scraping](http://en.wikipedia.org/wiki/Web_scraping \"Web scraping at Wikipedia\")”. This means, if IMDb changes anything within their HTML source, the script is most likely going to fail. I won’t update this regularly, so don’t count on it to be working all the time.\r\n## License\r\nMIT License\r\n\r\nCopyright (c) 2016 Avraam Piperidis\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}